{"ast":null,"code":"import _objectSpread from\"C:/Users/houda/OneDrive/Bureau/boutique-vetements/boutique-unified/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect,useCallback}from'react';import api from'../config/axios';import{jsx as _jsx}from\"react/jsx-runtime\";const OrdersContext=/*#__PURE__*/createContext();export const useOrders=()=>{const context=useContext(OrdersContext);if(!context){throw new Error('useOrders must be used within an OrdersProvider');}return context;};export const OrdersProvider=_ref=>{let{children}=_ref;const[orders,setOrders]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Fonction pour récupérer les commandes de l'utilisateur\nconst fetchOrders=useCallback(async()=>{try{setLoading(true);setError(null);const token=localStorage.getItem('token');if(!token){console.log('🔑 Pas de token d\\'authentification');setOrders([]);setLoading(false);setError('Veuillez vous connecter pour voir vos commandes');return;}// SOLUTION ROBUSTE: Utiliser uniquement fetch avec timeout court\nconsole.log('📤 Récupération des commandes avec fetch...');const controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),5000);// 5 secondes max\ntry{const response=await fetch('/api/orders',{method:'GET',headers:{'Content-Type':'application/json','x-auth-token':token},signal:controller.signal});clearTimeout(timeoutId);console.log(\"\\uD83D\\uDCCA R\\xE9ponse serveur: \".concat(response.status));if(response.status===401){console.log('🔑 Token expiré ou invalide');localStorage.removeItem('token');setOrders([]);setLoading(false);setError('Session expirée - Veuillez vous reconnecter');return;}if(!response.ok){throw new Error(\"HTTP \".concat(response.status,\": \").concat(response.statusText));}const data=await response.json();console.log(\"\\u2705 \".concat(data.length,\" commande(s) r\\xE9cup\\xE9r\\xE9e(s)\"));console.log('📋 Données reçues:',data);setOrders(data);}catch(fetchError){clearTimeout(timeoutId);if(fetchError.name==='AbortError'){throw new Error('Timeout: Le serveur met trop de temps à répondre');}throw fetchError;}}catch(error){var _error$response,_error$response2,_error$response3,_error$response4;console.error('❌ Erreur lors du chargement des commandes:',error);let errorMessage='Erreur lors du chargement des commandes';if(error.code==='ECONNABORTED'||error.message.includes('Timeout')){errorMessage='Timeout: Le serveur met trop de temps à répondre';}else if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===404){errorMessage='Route non trouvée';}else if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){errorMessage='Non autorisé - Veuillez vous reconnecter';}else if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===408){errorMessage='Timeout serveur: La requête prend trop de temps';}else if(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)>=500){errorMessage='Erreur serveur - Veuillez réessayer plus tard';}else if(!error.response){errorMessage='Impossible de contacter le serveur';}setError(errorMessage);setOrders([]);}finally{setLoading(false);}},[]);// Fonction pour ajouter une nouvelle commande\nconst addOrder=newOrder=>{setOrders(prevOrders=>[newOrder,...prevOrders]);};// Fonction pour mettre à jour le statut d'une commande\nconst updateOrderStatus=(orderId,newStatus)=>{setOrders(prevOrders=>prevOrders.map(order=>order._id===orderId?_objectSpread(_objectSpread({},order),{},{statut:newStatus}):order));};// Fonction pour obtenir le nombre de commandes\nconst getOrdersCount=()=>{return orders.length;};// Fonction pour obtenir les commandes par statut\nconst getOrdersByStatus=status=>{return orders.filter(order=>order.statut===status);};// Charger les commandes au montage du composant\nuseEffect(()=>{console.log('🔄 OrdersContext - Chargement initial des commandes');fetchOrders();},[]);// Retiré fetchOrders des dépendances\nconst value={orders,loading,error,fetchOrders,addOrder,updateOrderStatus,getOrdersCount,getOrdersByStatus};return/*#__PURE__*/_jsx(OrdersContext.Provider,{value:value,children:children});};export default OrdersContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","api","jsx","_jsx","OrdersContext","useOrders","context","Error","OrdersProvider","_ref","children","orders","setOrders","loading","setLoading","error","setError","fetchOrders","token","localStorage","getItem","console","log","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","headers","signal","clearTimeout","concat","status","removeItem","ok","statusText","data","json","length","fetchError","name","_error$response","_error$response2","_error$response3","_error$response4","errorMessage","code","message","includes","addOrder","newOrder","prevOrders","updateOrderStatus","orderId","newStatus","map","order","_id","_objectSpread","statut","getOrdersCount","getOrdersByStatus","filter","value","Provider"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/boutique-unified/frontend/src/contexts/OrdersContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport api from '../config/axios';\r\n\r\nconst OrdersContext = createContext();\r\n\r\nexport const useOrders = () => {\r\n  const context = useContext(OrdersContext);\r\n  if (!context) {\r\n    throw new Error('useOrders must be used within an OrdersProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const OrdersProvider = ({ children }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fonction pour récupérer les commandes de l'utilisateur\r\n  const fetchOrders = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.log('🔑 Pas de token d\\'authentification');\r\n        setOrders([]);\r\n        setLoading(false);\r\n        setError('Veuillez vous connecter pour voir vos commandes');\r\n        return;\r\n      }\r\n\r\n      // SOLUTION ROBUSTE: Utiliser uniquement fetch avec timeout court\r\n      console.log('📤 Récupération des commandes avec fetch...');\r\n      \r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 secondes max\r\n      \r\n      try {\r\n        const response = await fetch('/api/orders', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': token\r\n          },\r\n          signal: controller.signal\r\n        });\r\n        \r\n        clearTimeout(timeoutId);\r\n        \r\n        console.log(`📊 Réponse serveur: ${response.status}`);\r\n        \r\n        if (response.status === 401) {\r\n          console.log('🔑 Token expiré ou invalide');\r\n          localStorage.removeItem('token');\r\n          setOrders([]);\r\n          setLoading(false);\r\n          setError('Session expirée - Veuillez vous reconnecter');\r\n          return;\r\n        }\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log(`✅ ${data.length} commande(s) récupérée(s)`);\r\n        console.log('📋 Données reçues:', data);\r\n        setOrders(data);\r\n        \r\n      } catch (fetchError) {\r\n        clearTimeout(timeoutId);\r\n        \r\n        if (fetchError.name === 'AbortError') {\r\n          throw new Error('Timeout: Le serveur met trop de temps à répondre');\r\n        }\r\n        throw fetchError;\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Erreur lors du chargement des commandes:', error);\r\n      \r\n      let errorMessage = 'Erreur lors du chargement des commandes';\r\n      \r\n      if (error.code === 'ECONNABORTED' || error.message.includes('Timeout')) {\r\n        errorMessage = 'Timeout: Le serveur met trop de temps à répondre';\r\n      } else if (error.response?.status === 404) {\r\n        errorMessage = 'Route non trouvée';\r\n      } else if (error.response?.status === 401) {\r\n        errorMessage = 'Non autorisé - Veuillez vous reconnecter';\r\n      } else if (error.response?.status === 408) {\r\n        errorMessage = 'Timeout serveur: La requête prend trop de temps';\r\n      } else if (error.response?.status >= 500) {\r\n        errorMessage = 'Erreur serveur - Veuillez réessayer plus tard';\r\n      } else if (!error.response) {\r\n        errorMessage = 'Impossible de contacter le serveur';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setOrders([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Fonction pour ajouter une nouvelle commande\r\n  const addOrder = (newOrder) => {\r\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\r\n  };\r\n\r\n  // Fonction pour mettre à jour le statut d'une commande\r\n  const updateOrderStatus = (orderId, newStatus) => {\r\n    setOrders(prevOrders => \r\n      prevOrders.map(order => \r\n        order._id === orderId \r\n          ? { ...order, statut: newStatus }\r\n          : order\r\n      )\r\n    );\r\n  };\r\n\r\n  // Fonction pour obtenir le nombre de commandes\r\n  const getOrdersCount = () => {\r\n    return orders.length;\r\n  };\r\n\r\n  // Fonction pour obtenir les commandes par statut\r\n  const getOrdersByStatus = (status) => {\r\n    return orders.filter(order => order.statut === status);\r\n  };\r\n\r\n  // Charger les commandes au montage du composant\r\n  useEffect(() => {\r\n    console.log('🔄 OrdersContext - Chargement initial des commandes');\r\n    fetchOrders();\r\n  }, []); // Retiré fetchOrders des dépendances\r\n\r\n  const value = {\r\n    orders,\r\n    loading,\r\n    error,\r\n    fetchOrders,\r\n    addOrder,\r\n    updateOrderStatus,\r\n    getOrdersCount,\r\n    getOrdersByStatus\r\n  };\r\n\r\n  return (\r\n    <OrdersContext.Provider value={value}>\r\n      {children}\r\n    </OrdersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrdersContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import api from'../config/axios';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);// Configurer api avec le token\nuseEffect(()=>{if(token){api.defaults.headers.common['x-auth-token']=token;loadUser();}else{setLoading(false);}},[token]);// Charger les informations de l'utilisateur\nconst loadUser=async()=>{try{const res=await api.get('/auth/utilisateur');if(res.data.success){setUser(res.data.user);}else{throw new Error('Erreur de chargement utilisateur');}}catch(err){localStorage.removeItem('token');delete api.defaults.headers.common['x-auth-token'];setToken(null);setUser(null);}finally{setLoading(false);}};// Inscription\nconst register=async userData=>{try{const res=await api.post('/auth/inscription',userData);if(res.data.success){const{token:newToken,user:newUser}=res.data;setToken(newToken);setUser(newUser);localStorage.setItem('token',newToken);api.defaults.headers.common['x-auth-token']=newToken;toast.success('Inscription réussie !');return{success:true};}else{throw new Error(res.data.message||'Erreur lors de l\\'inscription');}}catch(err){var _err$response,_err$response$data;const message=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Erreur lors de l\\'inscription';toast.error(message);return{success:false,message};}};// Connexion (clients uniquement)\nconst login=async credentials=>{try{const res=await api.post('/auth/connexion',credentials);if(res.data.success){const{token:newToken,user:newUser}=res.data;setToken(newToken);setUser(newUser);localStorage.setItem('token',newToken);api.defaults.headers.common['x-auth-token']=newToken;toast.success('Connexion réussie !');return{success:true};}else{throw new Error(res.data.message||'Erreur lors de la connexion');}}catch(err){var _err$response2,_err$response2$data;const message=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||'Erreur lors de la connexion';toast.error(message);return{success:false,message};}};// Connexion admin\nconst loginAdmin=async credentials=>{try{const res=await api.post('/auth/connexion-admin',credentials);if(res.data.success){const{token:newToken,user:newUser}=res.data;setToken(newToken);setUser(newUser);localStorage.setItem('token',newToken);api.defaults.headers.common['x-auth-token']=newToken;toast.success('Connexion administrateur réussie !');return{success:true};}else{throw new Error(res.data.message||'Erreur lors de la connexion admin');}}catch(err){var _err$response3,_err$response3$data;const message=((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||'Erreur lors de la connexion admin';toast.error(message);return{success:false,message};}};// Déconnexion\nconst logout=()=>{setToken(null);setUser(null);localStorage.removeItem('token');delete api.defaults.headers.common['x-auth-token'];toast.success('Déconnexion réussie');};// Mettre à jour le profil\nconst updateProfile=async profileData=>{try{const res=await api.put('/users/profile',profileData);setUser(res.data);toast.success('Profil mis à jour avec succès !');return{success:true};}catch(err){var _err$response4,_err$response4$data;const message=((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.message)||'Erreur lors de la mise à jour du profil';toast.error(message);return{success:false,message};}};// Changer le mot de passe\nconst changePassword=async passwordData=>{try{await api.put('/users/password',passwordData);toast.success('Mot de passe mis à jour avec succès !');return{success:true};}catch(err){var _err$response5,_err$response5$data;const message=((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.message)||'Erreur lors du changement de mot de passe';toast.error(message);return{success:false,message};}};// Méthode pour définir le token (utilisée par OAuth)\nconst setAuthToken=newToken=>{setToken(newToken);localStorage.setItem('token',newToken);api.defaults.headers.common['x-auth-token']=newToken;loadUser();// Recharger les informations utilisateur\n};const value={user,token,loading,register,login,loginAdmin,logout,updateProfile,changePassword,setAuthToken,isAuthenticated:!!token,isAdmin:(user===null||user===void 0?void 0:user.role)==='admin'};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","loadUser","res","get","data","success","err","removeItem","register","userData","post","newToken","newUser","setItem","message","_err$response","_err$response$data","response","error","login","credentials","_err$response2","_err$response2$data","loginAdmin","_err$response3","_err$response3$data","logout","updateProfile","profileData","put","_err$response4","_err$response4$data","changePassword","passwordData","_err$response5","_err$response5$data","setAuthToken","value","isAuthenticated","isAdmin","role","Provider"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/frontend-vercel/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../config/axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Configurer api avec le token\r\n  useEffect(() => {\r\n    if (token) {\r\n      api.defaults.headers.common['x-auth-token'] = token;\r\n      loadUser();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  // Charger les informations de l'utilisateur\r\n  const loadUser = async () => {\r\n    try {\r\n      const res = await api.get('/auth/utilisateur');\r\n      if (res.data.success) {\r\n        setUser(res.data.user);\r\n      } else {\r\n        throw new Error('Erreur de chargement utilisateur');\r\n      }\r\n    } catch (err) {\r\n      localStorage.removeItem('token');\r\n      delete api.defaults.headers.common['x-auth-token'];\r\n      setToken(null);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Inscription\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await api.post('/auth/inscription', userData);\r\n      if (res.data.success) {\r\n        const { token: newToken, user: newUser } = res.data;\r\n        \r\n        setToken(newToken);\r\n        setUser(newUser);\r\n        localStorage.setItem('token', newToken);\r\n        api.defaults.headers.common['x-auth-token'] = newToken;\r\n        \r\n        toast.success('Inscription réussie !');\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(res.data.message || 'Erreur lors de l\\'inscription');\r\n      }\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors de l\\'inscription';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Connexion (clients uniquement)\r\n  const login = async (credentials) => {\r\n    try {\r\n      const res = await api.post('/auth/connexion', credentials);\r\n      if (res.data.success) {\r\n        const { token: newToken, user: newUser } = res.data;\r\n        \r\n        setToken(newToken);\r\n        setUser(newUser);\r\n        localStorage.setItem('token', newToken);\r\n        api.defaults.headers.common['x-auth-token'] = newToken;\r\n        \r\n        toast.success('Connexion réussie !');\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(res.data.message || 'Erreur lors de la connexion');\r\n      }\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors de la connexion';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Connexion admin\r\n  const loginAdmin = async (credentials) => {\r\n    try {\r\n      const res = await api.post('/auth/connexion-admin', credentials);\r\n      if (res.data.success) {\r\n        const { token: newToken, user: newUser } = res.data;\r\n        \r\n        setToken(newToken);\r\n        setUser(newUser);\r\n        localStorage.setItem('token', newToken);\r\n        api.defaults.headers.common['x-auth-token'] = newToken;\r\n        \r\n        toast.success('Connexion administrateur réussie !');\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(res.data.message || 'Erreur lors de la connexion admin');\r\n      }\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors de la connexion admin';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Déconnexion\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['x-auth-token'];\r\n    toast.success('Déconnexion réussie');\r\n  };\r\n\r\n  // Mettre à jour le profil\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const res = await api.put('/users/profile', profileData);\r\n      setUser(res.data);\r\n      toast.success('Profil mis à jour avec succès !');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors de la mise à jour du profil';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Changer le mot de passe\r\n  const changePassword = async (passwordData) => {\r\n    try {\r\n      await api.put('/users/password', passwordData);\r\n      toast.success('Mot de passe mis à jour avec succès !');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors du changement de mot de passe';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Méthode pour définir le token (utilisée par OAuth)\r\n  const setAuthToken = (newToken) => {\r\n    setToken(newToken);\r\n    localStorage.setItem('token', newToken);\r\n    api.defaults.headers.common['x-auth-token'] = newToken;\r\n    loadUser(); // Recharger les informations utilisateur\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    register,\r\n    login,\r\n    loginAdmin,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    setAuthToken,\r\n    isAuthenticated: !!token,\r\n    isAdmin: user?.role === 'admin'\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
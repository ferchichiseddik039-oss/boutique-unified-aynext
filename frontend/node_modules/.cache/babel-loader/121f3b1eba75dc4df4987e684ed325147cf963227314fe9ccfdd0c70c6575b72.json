{"ast":null,"code":"import{useEffect}from'react';import{useNavigate}from'react-router-dom';import{toast}from'react-toastify';import{useAuth}from'../contexts/AuthContext';export const useKeyboardShortcuts=()=>{const navigate=useNavigate();const{isAuthenticated,isAdmin}=useAuth();useEffect(()=>{const handleKeyDown=event=>{// Raccourci Ctrl+Shift+A pour accéder à l'admin\nif(event.ctrlKey&&event.shiftKey&&event.key.toLowerCase()==='a'){event.preventDefault();if(isAuthenticated&&isAdmin){// Si l'utilisateur est connecté et admin, naviguer vers /admin\ntoast.success('Accès à l\\'administration autorisé');navigate('/admin');}else if(isAuthenticated&&!isAdmin){// Si l'utilisateur est connecté mais pas admin, afficher un message\ntoast.error('Accès refusé : Vous devez être administrateur pour accéder à cette section.');}else{// Si l'utilisateur n'est pas connecté, rediriger vers la page de connexion admin\ntoast.info('Veuillez vous connecter en tant qu\\'administrateur');navigate('/admin/login');}}// Raccourci Ctrl+Shift+L pour la connexion admin\nif(event.ctrlKey&&event.shiftKey&&event.key.toLowerCase()==='l'){event.preventDefault();if(!isAuthenticated){toast.info('Accès à la connexion administrateur');navigate('/admin/login');}else if(isAuthenticated&&isAdmin){toast.info('Vous êtes déjà connecté en tant qu\\'administrateur');navigate('/admin');}else{toast.info('Vous êtes déjà connecté. Déconnectez-vous d\\'abord pour accéder à la connexion admin.');}}};// Ajouter l'écouteur d'événements\ndocument.addEventListener('keydown',handleKeyDown);// Nettoyer l'écouteur d'événements lors du démontage\nreturn()=>{document.removeEventListener('keydown',handleKeyDown);};},[navigate,isAuthenticated,isAdmin]);};","map":{"version":3,"names":["useEffect","useNavigate","toast","useAuth","useKeyboardShortcuts","navigate","isAuthenticated","isAdmin","handleKeyDown","event","ctrlKey","shiftKey","key","toLowerCase","preventDefault","success","error","info","document","addEventListener","removeEventListener"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/frontend-vercel/src/hooks/useKeyboardShortcuts.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport const useKeyboardShortcuts = () => {\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated, isAdmin } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      // Raccourci Ctrl+Shift+A pour accéder à l'admin\r\n      if (event.ctrlKey && event.shiftKey && event.key.toLowerCase() === 'a') {\r\n        event.preventDefault();\r\n        \r\n        if (isAuthenticated && isAdmin) {\r\n          // Si l'utilisateur est connecté et admin, naviguer vers /admin\r\n          toast.success('Accès à l\\'administration autorisé');\r\n          navigate('/admin');\r\n        } else if (isAuthenticated && !isAdmin) {\r\n          // Si l'utilisateur est connecté mais pas admin, afficher un message\r\n          toast.error('Accès refusé : Vous devez être administrateur pour accéder à cette section.');\r\n        } else {\r\n          // Si l'utilisateur n'est pas connecté, rediriger vers la page de connexion admin\r\n          toast.info('Veuillez vous connecter en tant qu\\'administrateur');\r\n          navigate('/admin/login');\r\n        }\r\n      }\r\n      \r\n      // Raccourci Ctrl+Shift+L pour la connexion admin\r\n      if (event.ctrlKey && event.shiftKey && event.key.toLowerCase() === 'l') {\r\n        event.preventDefault();\r\n        \r\n        if (!isAuthenticated) {\r\n          toast.info('Accès à la connexion administrateur');\r\n          navigate('/admin/login');\r\n        } else if (isAuthenticated && isAdmin) {\r\n          toast.info('Vous êtes déjà connecté en tant qu\\'administrateur');\r\n          navigate('/admin');\r\n        } else {\r\n          toast.info('Vous êtes déjà connecté. Déconnectez-vous d\\'abord pour accéder à la connexion admin.');\r\n        }\r\n      }\r\n    };\r\n\r\n    // Ajouter l'écouteur d'événements\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    // Nettoyer l'écouteur d'événements lors du démontage\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [navigate, isAuthenticated, isAdmin]);\r\n};\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,OAAO,KAAQ,yBAAyB,CAEjD,MAAO,MAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CACxC,KAAM,CAAAC,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEK,eAAe,CAAEC,OAAQ,CAAC,CAAGJ,OAAO,CAAC,CAAC,CAE9CH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,aAAa,CAAIC,KAAK,EAAK,CAC/B;AACA,GAAIA,KAAK,CAACC,OAAO,EAAID,KAAK,CAACE,QAAQ,EAAIF,KAAK,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,GAAK,GAAG,CAAE,CACtEJ,KAAK,CAACK,cAAc,CAAC,CAAC,CAEtB,GAAIR,eAAe,EAAIC,OAAO,CAAE,CAC9B;AACAL,KAAK,CAACa,OAAO,CAAC,oCAAoC,CAAC,CACnDV,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,IAAM,IAAIC,eAAe,EAAI,CAACC,OAAO,CAAE,CACtC;AACAL,KAAK,CAACc,KAAK,CAAC,6EAA6E,CAAC,CAC5F,CAAC,IAAM,CACL;AACAd,KAAK,CAACe,IAAI,CAAC,oDAAoD,CAAC,CAChEZ,QAAQ,CAAC,cAAc,CAAC,CAC1B,CACF,CAEA;AACA,GAAII,KAAK,CAACC,OAAO,EAAID,KAAK,CAACE,QAAQ,EAAIF,KAAK,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,GAAK,GAAG,CAAE,CACtEJ,KAAK,CAACK,cAAc,CAAC,CAAC,CAEtB,GAAI,CAACR,eAAe,CAAE,CACpBJ,KAAK,CAACe,IAAI,CAAC,qCAAqC,CAAC,CACjDZ,QAAQ,CAAC,cAAc,CAAC,CAC1B,CAAC,IAAM,IAAIC,eAAe,EAAIC,OAAO,CAAE,CACrCL,KAAK,CAACe,IAAI,CAAC,oDAAoD,CAAC,CAChEZ,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,IAAM,CACLH,KAAK,CAACe,IAAI,CAAC,uFAAuF,CAAC,CACrG,CACF,CACF,CAAC,CAED;AACAC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAEX,aAAa,CAAC,CAEnD;AACA,MAAO,IAAM,CACXU,QAAQ,CAACE,mBAAmB,CAAC,SAAS,CAAEZ,aAAa,CAAC,CACxD,CAAC,CACH,CAAC,CAAE,CAACH,QAAQ,CAAEC,eAAe,CAAEC,OAAO,CAAC,CAAC,CAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}